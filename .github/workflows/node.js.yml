name: Node.js CI

on:
  push:
    branches:
      - develop
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      # キャッシュ管理
      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      # /キャッシュ管理
      - run: npm install
      - run: npm run bootstrap
      - run: npm run build:lib
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            front:
              - 'front/**'
            app:
              - 'app/**'
            lib:
              - 'lib/**'
      - name: test front
        run: npm run test
        if: steps.changes.outputs.front == 'true'
        working-directory: ./front
      - name: test app
        run: npm run test
        if: steps.changes.outputs.app == 'true'
        working-directory: ./app
      - name: test lib
        run: npm run test
        if: steps.changes.outputs.lib == 'true'
        working-directory: ./lib
  release:
    name: Create Github Release
    if: contains(github.ref, 'tags/v')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  publish:
    if: contains(github.ref, 'tags/v')
    needs: [test, release]
    runs-on: ${{ matrix.map.os }}
    strategy:
      matrix:
        map:
          - os: macos-latest
            path: ./build/mac/k42un0k0passwordmanager.app
            name: k42un0k0passwordmanager.app
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      # キャッシュ管理
      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      # /キャッシュ管理
      - run: npm install
      - name: set aws-exports
        run: echo $AWS_EXPORTS  > ./front/src/aws-exports.js
      - run: npm run bootstrap
      - run: npm run package

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ matrix.map.path }}
          asset_name: ${{ matrix.map.name }}
          asset_content_type: application/zip
