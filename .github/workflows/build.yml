name: Build/release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.map.os }}

    strategy:
      matrix:
        map:
          - os: mac-latest
            path: ./build/mac/k42un0k0passwordmanager.app
            name: k42un0k0passwordmanager.app

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      # キャッシュ管理
      - name: restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      # /キャッシュ管理
      - run: npm install
      - run: npm run bootstrap

      - run: npm run package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ matrix.map.path }}
          asset_name: ${{ matrix.map.name }}
          asset_content_type: application/zip
